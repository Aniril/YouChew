@model List<YouChew.Models.Restaurant>

@{
    ViewBag.Title = "YouChew Geolocator";
}

<center>
    <h1>YouChew Geolocator</h1>

    <br />
    <br />

    <a href='#' id='geolocate' style="font-size: x-large">Refresh Current Location</a>
</center>

<br />

<style>
.marker-image {
    width:25px;
    height:25px;
    margin-left:-12px;
    margin-top:-12px;
    pointer-events:all;
    position:absolute;
}
</style>

<div id='map'></div>

<center>
<input type="checkbox" id="fastFoodChecked" checked="checked" onchange="changeMarkers()" /> Fast Food
<input type="checkbox" id="pizzaChecked" checked="checked" onchange="changeMarkers()" /> Pizza
<input type="checkbox" id="mexicanChecked" checked="checked" onchange="changeMarkers()" /> Mexican
<input type="checkbox" id="dinerChecked" checked="checked" onchange="changeMarkers()" /> Diner
</center>


<script type="text/javascript">
    var curLat = @ViewBag.Lat;
    var curLng = @ViewBag.Lng;

    var features = [
    @foreach(var item in Model)
    {
        <text>
            {
                "geometry": { "type": "Point", "coordinates": [@item.longitude, @item.latitude]},
                "properties": {
                    "id": "@item.Id",
                    "image": "@item.icon",
                    "tempImage": "@item.icon",
                    "name": "@item.name",
                    "location": "@item.location",
                    "phone": "@item.phone",
                    "cuisine": "@item.cuisine",
                    "url": "./Restaurant?venueId=@item.Id"
                }
            },
        </text>
    }
    ];
    
    // Create the Map
    var m = mapbox.map('map').zoom(2).center({ lat: 0, lon: 0 });
    m.addLayer(mapbox.layer().id('examples.map-4l7djmvo'));

    // Zoom Controls
    m.ui.zoomer.add();
    m.ui.zoombox.add();
    m.zoom(3);

    // Add Marker Layer
    var markerLayer = mapbox.markers.layer();
    m.addLayer(markerLayer);

    var restaurantLayer = mapbox.markers.layer().features(features).factory(function(f) {
        var img = document.createElement('img');
        img.className = 'marker-image';
        img.setAttribute('src', f.properties.image);
        return img;
    });

    var interaction = mapbox.markers.interaction(restaurantLayer);
    m.addLayer(restaurantLayer);

    // Add Initial Marker
    m.zoom(12).center({
          lat: curLat,
          lon: curLng
    });
    markerLayer.add_feature({
          geometry: {
              coordinates: [curLng, curLat]
          },
          properties: {
              'marker-color': '#000',
              'marker-symbol': 'star-stroked'
          }
    });

    // Add Interaction
    interaction.formatter(function(feature) {
        var o = '<center><b>' + feature.properties.name + '</b><br/>' + feature.properties.location + '<br/>' +
            feature.properties.phone +
            '<form method="post" action="' + feature.properties.url + '">' +
            '<input type="hidden" name="venueId" value="' + feature.properties.id + '">' +
            '<input type="submit" value="See More" class="btn btn-info"></form>' +
            '</center>';

        return o;
    });

    function changeMarkers()
    {
        for(var i = 0; i < features.length; i++)
        {
            if(features[i].properties.cuisine == "Fast Food")
            {
                if(!document.getElementById("fastFoodChecked").checked)
                {
                    features[i].properties.image = null;
                }
                else
                {
                    features[i].properties.image = features[i].properties.tempImage;
                }
            }
            else if(features[i].properties.cuisine == "Pizza")
            {
                if(!document.getElementById("pizzaChecked").checked)
                {
                    features[i].properties.image = null;
                }
                else
                {
                    features[i].properties.image = features[i].properties.tempImage;
                }
            }
            else if(features[i].properties.cuisine == "Mexican")
            {
                if(!document.getElementById("mexicanChecked").checked)
                {
                    features[i].properties.image = null;
                }
                else
                {
                    features[i].properties.image = features[i].properties.tempImage;
                }
            }
            else if(features[i].properties.cuisine == "Diner")
            {
                if(!document.getElementById("dinerChecked").checked)
                {
                    features[i].properties.image = null;
                }
                else
                {
                    features[i].properties.image = features[i].properties.tempImage;
                }
            }
            else
            {
                features[i].properties.image = features[i].properties.tempImage;
            }
        }
        restaurantLayer.features(features);
    }
 
    // Geolocator
    var geolocate = document.getElementById('geolocate');

    if (!navigator.geolocation) {
      geolocate.innerHTML = 'geolocation is not available';
    } else {
      geolocate.onclick = function(e) {
          e.preventDefault();
          e.stopPropagation();
          navigator.geolocation.getCurrentPosition(
          function(position) {
              m.zoom(11).center({
                  lat: position.coords.latitude,
                  lon: position.coords.longitude
              });
              markerLayer.add_feature({
                  geometry: {
                      coordinates: [
                          position.coords.longitude,
                          position.coords.latitude]
                  },
                  properties: {
                      'marker-color': '#000',
                      'marker-symbol': 'star-stroked'
                  }
              });
          },
          function(err) {
              geolocate.innerHTML = 'position could not be found';
          });
      };
  }
</script>
